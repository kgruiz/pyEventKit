\documentclass{article}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{tikz}
\usepackage{xcolor}
\usepackage{array}
\usepackage{enumitem}
\usepackage{tabularx}
\usepackage{booktabs}

\begin{document}

EventKit / Creating a recurring event

Article

\textbf{Creating a recurring event}

Set up an event or reminder that repeats.

\textbf{Overview}

Recurring events repeat over a specified interval of time. To make an event recurring, assign it a recurrence rule that describes when the event occurs. Recurrence rules are represented by instances of the \texttt{EKRecurrenceRule} class.

Recurrence is applicable to both calendar events and reminders. Unlike with recurring events, only the first incomplete reminder of a recurring set is obtainable. This is true with EventKit as well as the Reminders app. When the reminder is completed, the next reminder in the recurrence set becomes available.

\textbf{Create a Basic Rule}

You can create a recurrence rule with a simple daily, weekly, monthly, or yearly pattern using the \texttt{init(recurrenceWith:interval:end:)} method. You provide three values to this method:

\begin{itemize}
    \item The recurrence frequency. This is a value of type \texttt{EKRecurrenceFrequency} that indicates whether the recurrence rule is daily, weekly, monthly, or yearly.
    \item The recurrence interval. This is an integer greater than 0 that specifies how often a pattern repeats. For example, if the recurrence rule is a weekly recurrence rule and its interval is 1, then the pattern repeats every week. If the recurrence rule is a monthly recurrence rule and its interval is 3, then the pattern repeats every three months.
    \item The recurrence end. This optional parameter is an instance of the \texttt{EKRecurrenceEnd} class, which indicates when the recurrence rule ends. The recurrence end can be based on a specific end date or on an amount of occurrences. If you don't want to specify an end for the recurrence rule, pass \texttt{nil}.
\end{itemize}

\textbf{Create a Complex Rule}

You can create a recurrence rule with a complex pattern using the \texttt{init(recurrenceWith: interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:)} method. As for a basic recurrence rule, you provide a frequency, interval, and optional end for the recurring event. In addition, you can provide a combination of optional values describing a custom rule, as listed in the table below.

\begin{tabular}{@{}llll@{}}
\toprule
\textbf{Parameter name} & \textbf{Accepted values} & \textbf{\begin{tabular}[c]{@{}l@{}}Can be\\ combined\\ with\end{tabular}} & \textbf{Example} \\ \midrule
days & \begin{tabular}[c]{@{}l@{}}An array of\\ \texttt{EKRecurrenceDayOfWeek} \\ objects.\end{tabular} & \begin{tabular}[c]{@{}l@{}}All\\ recurrence\\ rules\\ except for\\ daily\\ recurrence\\ rules.\end{tabular} & \begin{tabular}[c]{@{}l@{}}An array containing \texttt{EKTuesday} and \texttt{EKFriday} \\ objects will create a recurrence that occurs every\\ Tuesday and Friday.\end{tabular} \\ \midrule
monthDays & \begin{tabular}[c]{@{}l@{}}An array of nonzero\\ \texttt{NSNumber} objects \\ ranging from -31 to 31. \\ Negative values \\ indicate counting\\ backward from the end\\ of the month.\end{tabular} & \begin{tabular}[c]{@{}l@{}}Monthly\\ recurrence\\ rules only.\end{tabular} & \begin{tabular}[c]{@{}l@{}}An array containing the values 1 and -1 will create a\\ recurrence that occurs on the first and last day of\\ every month.\end{tabular} \\ \midrule
months & \begin{tabular}[c]{@{}l@{}}An array of \texttt{NSNumber} \\ objects with values\\ ranging from 1 to 12,\\ corresponding to\\ Gregorian calendar\\ months.\end{tabular} & \begin{tabular}[c]{@{}l@{}}Yearly\\ recurrence\\ rules only.\end{tabular} & \begin{tabular}[c]{@{}l@{}}If your originating event occurs on January 10, you can\\ provide an array containing the values 1 and 2 to\\ create a recurrence that occurs every January 10 and\\ February 10.\end{tabular} \\ \midrule
weeksOfTheYear & \begin{tabular}[c]{@{}l@{}}An array of nonzero\\ \texttt{NSNumber} objects\\ ranging from -53 to 53.\\ Negative values\\ indicate counting\\ backward from the end\\ of the year.\end{tabular} & \begin{tabular}[c]{@{}l@{}}Yearly\\ recurrence\\ rules only.\end{tabular} & \begin{tabular}[c]{@{}l@{}}If your originating event occurs on a Wednesday, you\\ can provide an array containing the values 1 and -1 to\\ create a recurrence that occurs on the Wednesday of\\ the first and last weeks of every year. If a specified\\ week does not contain a Wednesday in the current\\ year, as can be the case for the first or last week of a\\ year, the event does not occur.\end{tabular} \\ \midrule
daysOfTheYear & \begin{tabular}[c]{@{}l@{}}An array of nonzero\\ \texttt{NSNumber} objects\\ ranging from -366 to\\ 366. Negative values\\ indicate counting\\ backward from the end\\ of the year.\end{tabular} & \begin{tabular}[c]{@{}l@{}}Yearly\\ recurrence\\ rules only.\end{tabular} & \begin{tabular}[c]{@{}l@{}}You can provide an array containing the values 1 and -\\ 1 to create a recurrence that occurs on the first and\\ last day of every year.\end{tabular} \\ \midrule
setPositions & \begin{tabular}[c]{@{}l@{}}An array of nonzero\\ \texttt{NSNumber} objects\\ ranging from -366 to\\ 366. Negative values\\ indicate counting\\ backward from the end\\ of the list of\\ occurrences.\end{tabular} & \begin{tabular}[c]{@{}l@{}}All\\ recurrence\\ rules\\ except for\\ daily\\ recurrence\\ rules.\end{tabular} & \begin{tabular}[c]{@{}l@{}}If you provide an array containing the values 1 and -1\\ to a yearly recurrence rule that has specified Monday\\ through Friday as its value for days of the week, the\\ recurrence occurs only on the first and last weekday of\\ every year.\end{tabular} \\ \bottomrule
\end{tabular}

You can provide values for any number of the parameters in the table. Parameters that don't apply to a particular recurrence rule are ignored. If you provide a value for more than one of the parameters, the recurrence occurs only on days that apply to all provided values.

Once you have created a recurrence rule, you can apply it to a calendar event or reminder with the \texttt{addRecurrenceRule()} method of \texttt{EKCalendarItem}.

\textbf{See Also}

\textbf{Recurrence}

\texttt{class EKRecurrenceDayOfWeek}

A class that represents the day of the week.

\texttt{class EKRecurrenceEnd}

A class that defines the end of a recurrence rule.

\texttt{class EKRecurrenceRule}

A class that describes the pattern for a recurring event.

\end{document}
