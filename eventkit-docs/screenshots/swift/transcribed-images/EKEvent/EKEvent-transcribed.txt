\documentclass{article}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{tikz}
\usepackage{xcolor}
\usepackage{array}
\usepackage{enumitem}
\usepackage{tabularx}

\begin{document}
EventKit / EKEvent

Class

\textbf{EKEvent}

A class that represents an event in a calendar.

iOS 4.0+ | iPadOS 4.0+ | Mac Catalyst 13.1+ | macOS 10.8+ | visionOS 1.0+ | watchOS 2.0+

\texttt{class EKEvent}

Mentioned in

Creating events and reminders

Retrieving events and reminders

Overview

Use the \texttt{init(eventStore:)} method to create a new event. Use the properties in the class to get and modify certain information about an event. Other properties, such as the event's title and calendar, are inherited from the parent class \texttt{EKCalendarItem}.

Topics

Creating Events

\texttt{init(eventStore: EKEventStore)}

Creates and returns a new event belonging to a specified event store.

Scheduling Events

\texttt{enum EKEventStatus}

The event's status.

\texttt{enum EKEventAvailability}

The event's availability setting for scheduling purposes.

Comparing Events

\texttt{func compareStartDate(with: EKEvent) -> ComparisonResult}

Compares the start date of the receiving event with the start date of another event.

Accessing Event Properties

\texttt{var eventIdentifier: String!}

A unique identifier for the event.

\texttt{var availability: EKEventAvailability}

The availability setting for the event.

\texttt{var startDate: Date!}

The start date of the event.

\texttt{var endDate: Date!}

The end date for the event.

\texttt{var isAllDay: Bool}

A Boolean value that indicates whether the event is an all-day event.

\texttt{var occurrenceDate: Date!}

The original occurrence date of an event if it is part of a recurring series.

\texttt{var isDetached: Bool}

A Boolean value that indicates whether an event is a detached instance of a repeating event.

\texttt{var organizer: EKParticipant?}

The organizer associated with the event.

\texttt{var status: EKEventStatus}

The status of the event.

\texttt{var birthdayContactIdentifier: String?}

The contact identifier of the person for this birthday event.

\texttt{var structuredLocation: EKStructuredLocation?}

The event's location with a potential geocoordinate.

\texttt{var birthdayPersonID: Int}

The Address Book framework record identifier of the person for this birthday event.

Deprecated

\texttt{var birthdayPersonUniqueID: String?}

The Address Book framework record identifier of the person for this birthday event.

Deprecated

Refreshing Event Data

\texttt{func refresh() -> Bool}

Updates the event's data with the current information in the Calendar database.

Relationships

Inherits From

\texttt{EKCalendarItem}

Conforms To

\texttt{CVarArg}

\texttt{CustomDebugStringConvertible}

\texttt{CustomStringConvertible}

\texttt{Equatable}

\texttt{Hashable}

\texttt{NSObjectProtocol}

See Also

Events and reminders

Creating events and reminders

Create and modify events and reminders in a person's database.

Retrieving events and reminders

Fetch events and reminders from the Calendar database.

Updating with notifications

Register for notifications about changes and keep your app up to date.

{} Managing Location-Based Reminders

Add, fetch, complete, remove, and sort location-based reminders in your app.

\texttt{class EKReminder}

A class that represents a reminder in a calendar.
\end{document}
