\documentclass{article}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{tikz}
\usepackage{xcolor}
\usepackage{array}
\usepackage{enumitem}
\usepackage{tabularx}

\begin{document}

EventKit / Updating with notifications

API Collection

\section*{Updating with notifications}
Register for notifications about changes and keep your app up to date.

\section*{Overview}
It's possible for another process or app to modify the Calendar database while your app is running. If your app
fetches calendar events or reminders, register to be notified about changes to the Calendar database to ensure
the calendar and reminder information you display to the user is current.

\section*{Register for Notifications}
An \texttt{EKEventStore} object posts an \texttt{EKEventStoreChangedNotification} notification whenever it detects
changes to the Calendar database. Register for this notification if your app handles event or reminder data.

The code listing below registers for the \texttt{EKEventStoreChangedNotification} notification.

\noindent\texttt{NotificationCenter.default.addObserver(self, selector: Selector("storeChanged:"), nam}

\section*{Respond to Notifications}
When you receive an \texttt{EKEventStoreChangedNotification} notification, it's possible the objects you've
fetched\textemdash such as an \texttt{EKEvent}, \texttt{EKReminder}, or \texttt{EKCalendar}\textemdash have changed. The effect of the changes
depends on whether an event was added, modified, or deleted:

\begin{itemize}
    \item If an event was added, it does not affect any of your previously fetched events or reminders, but the added
event may fall within the date range of events you are displaying to the user.
    \item If an event was modified or deleted, properties of \texttt{EKEvent} and \texttt{EKReminder} objects representing that event
may become out of date.
\end{itemize}

Because your local data is often invalidated or incomplete when a change occurs in the Calendar database, you
should refetch your current date range of events whenever you receive an \texttt{EKEventStoreChanged}
\texttt{Notification} notification. If you are modifying an event and do not want to refetch it unless it is absolutely
necessary, call the \texttt{refreshSourcesIfNecessary()} method on the event. If the method returns YES, you can
continue to use the event; otherwise, you must refetch it.

\begin{tabular}{|p{13cm}|}
    \hline
    Note \\
    Events being modified in an event view controller with EventKitUI for iOS are updated automatically when a
change occurs in the Calendar database. See EventKit UI for more. \\
    \hline
\end{tabular}

\section*{See Also}

\subsection*{Events and reminders}

\begin{itemize}
    \item Creating events and reminders \\
Create and modify events and reminders in a person's database.
    \item Retrieving events and reminders \\
Fetch events and reminders from the Calendar database.
    \item \{\} Managing Location-Based Reminders \\
Add, fetch, complete, remove, and sort location-based reminders in your app.
\end{itemize}

\noindent class \texttt{EKEvent} \\
A class that represents an event in a calendar.

\noindent class \texttt{EKReminder} \\
A class that represents a reminder in a calendar.

\end{document}
